{"version":3,"file":"static/js/718.5adb8cf5.chunk.js","mappings":"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","sources":["pages/comment-list/index.tsx"],"sourcesContent":["import { formatDistance } from 'date-fns';\r\nimport { ko } from 'date-fns/locale/ko';\r\nimport { useCallback } from 'react';\r\nimport { LuPlusCircle } from 'react-icons/lu';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport useFetchCommentList from 'hook/comments/use-fetch-comment-list';\r\nimport UseFetchPostDetail from 'pages/post-detail/hook/use-fetch-post-detail';\r\n\r\nimport CommentForm from 'components/comments/comment-form';\r\nimport CommentList from 'components/comments/comment-list';\r\nimport CommentSkeleton from 'components/comments/comment-skeleton';\r\nimport FlexBox from 'components/common/flex-box';\r\nimport PostHeader from 'components/common/post-header';\r\nimport Typography from 'components/common/typography';\r\n\r\nconst Container = styled.div`\r\n  min-width: 335px;\r\n  min-height: 100vh;\r\n  background-color: black;\r\n  color: #fff;\r\n  z-index: 20;\r\n  padding-top: 3rem;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 500px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\n\r\nconst ContentsList = styled.ul`\r\n  height: calc(100vh - 150px);\r\n  margin: 0;\r\n  overflow-y: scroll;\r\n  padding: 16px;\r\n  scrollbar-width: none;\r\n  background-color: black;\r\n`;\r\n\r\nconst ContentsItem = styled.li`\r\n  display: flex;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  flex-shrink: 0;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Post = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  gap: 5px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst Time = styled.div`\r\n  color: rgb(168, 168, 168);\r\n  font-size: 12px;\r\n`;\r\n\r\nconst skeletons = Array(12).fill(0);\r\n\r\nconst CommentListPage = () => {\r\n  let { id } = useParams();\r\n\r\n  const { data, isLoading: postLoading } = UseFetchPostDetail(id as string);\r\n  const {\r\n    data: commentListResponse,\r\n    isLoading: commentListLoading,\r\n    isFetching,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n  } = useFetchCommentList(id as string);\r\n\r\n  const fetchNext = useCallback(async () => {\r\n    const res = await fetchNextPage();\r\n\r\n    if (res.isError) {\r\n      console.log(res.error);\r\n    }\r\n  }, [fetchNextPage]);\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <PostHeader text='게시물' />\r\n        <ContentsList>\r\n          <ContentsItem>\r\n            {postLoading ? (\r\n              <CommentSkeleton />\r\n            ) : (\r\n              <>\r\n                <Image src={data?.author?.avatar} alt='' />\r\n\r\n                <FlexBox $direction='column'>\r\n                  <Post>\r\n                    <span>\r\n                      <b>{data?.author?.nickname} </b>\r\n                      <span\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: data?.contents || '',\r\n                        }}\r\n                      ></span>\r\n                    </span>\r\n                  </Post>\r\n                  <Time>\r\n                    {data &&\r\n                      formatDistance(new Date(), new Date(data.date), {\r\n                        locale: ko as any,\r\n                      })}\r\n                    전\r\n                  </Time>\r\n                </FlexBox>\r\n              </>\r\n            )}\r\n          </ContentsItem>\r\n          <FlexBox $direction='column' style={{ height: '100%' }}>\r\n            {commentListLoading ? (\r\n              <>\r\n                {skeletons.map((_, index) => (\r\n                  <div key={index}>\r\n                    <CommentSkeleton />\r\n                  </div>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              // 댓글 리스트\r\n              <>\r\n                {commentListResponse?.pages?.map((data, index) =>\r\n                  data?.commentList?.length !== 0 ? (\r\n                    data.commentList.map((comment) => (\r\n                      <CommentList\r\n                        postId={id}\r\n                        comment={comment}\r\n                        key={comment._id}\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <FlexBox\r\n                      style={{ height: '100%' }}\r\n                      $justifyContent='center'\r\n                      $alignItems='center'\r\n                      $direction='column'\r\n                      key={index}\r\n                    >\r\n                      <Typography tag='h3'>아직 댓글이 없습니다.</Typography>\r\n                      <Typography tag='h5'>댓글을 남겨보세요.</Typography>\r\n                    </FlexBox>\r\n                  )\r\n                )}\r\n\r\n                {isFetching || isFetchingNextPage ? (\r\n                  <img src='/spinner.svg' alt='loading' className='spinner' />\r\n                ) : (\r\n                  <>\r\n                    {hasNextPage && (\r\n                      <div onClick={() => fetchNext()}>\r\n                        <FlexBox\r\n                          $justifyContent='center'\r\n                          $alignItems='center'\r\n                          style={{\r\n                            minHeight: '40px',\r\n                            fontSize: '20px',\r\n                            marginTop: '10px',\r\n                            cursor: 'pointer',\r\n                          }}\r\n                        >\r\n                          <LuPlusCircle />\r\n                        </FlexBox>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </FlexBox>\r\n        </ContentsList>\r\n\r\n        <CommentForm post={data} />\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CommentListPage;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","ContentsList","ul","_templateObject3","ContentsItem","li","_templateObject4","Image","img","_templateObject5","Post","_templateObject6","Time","_templateObject7","skeletons","Array","fill","CommentListPage","_data$author","_data$author2","_commentListResponse$","id","useParams","data","isLoading","postLoading","UseFetchPostDetail","commentListResponse","commentListLoading","isFetching","isFetchingNextPage","hasNextPage","fetchNextPage","useFetchCommentList","fetchNext","useCallback","async","res","isError","console","log","error","_jsx","children","_jsxs","PostHeader","text","CommentSkeleton","_Fragment","src","author","avatar","alt","FlexBox","$direction","nickname","dangerouslySetInnerHTML","__html","contents","formatDistance","Date","date","locale","ko","style","height","map","_","index","pages","_data$commentList","commentList","length","comment","CommentList","postId","_id","$justifyContent","$alignItems","Typography","tag","className","onClick","minHeight","fontSize","marginTop","cursor","LuPlusCircle","CommentForm","post"],"sourceRoot":""}