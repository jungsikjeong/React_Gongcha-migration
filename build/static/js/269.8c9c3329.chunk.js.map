{"version":3,"file":"static/js/269.8c9c3329.chunk.js","mappings":"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","sources":["components/home-footer.tsx","pages/home/index.tsx"],"sourcesContent":["import { motion } from 'framer-motion';\r\nimport { useState } from 'react';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 400px;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  flex-basis: 50%;\r\n  padding: 10px;\r\n  color: #fff;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  text-align: right;\r\n  margin-top: 10px;\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\n\r\nconst Button = styled(motion.button)`\r\n  font-size: 20px;\r\n  margin: 0 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n  flex-basis: 50%;\r\n  height: 150px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: zoom-in;\r\n    transition: all 0.3s cubic-bezier(0.2, 0, 0.2, 1) !important;\r\n  }\r\n\r\n  .popvisible {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 500px;\r\n    height: 500px;\r\n    transform: translate(-50%, -50%);\r\n    cursor: zoom-out;\r\n    @media (max-width: 768px) {\r\n      width: 350px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst containerVariants = {\r\n  hidden: { opacity: 0, y: 50 },\r\n  visible: { opacity: 1, y: 0, transition: { duration: 0.8, delay: 0.5 } },\r\n};\r\n\r\nconst MainFooter = () => {\r\n  const [number, setNumber] = useState(0);\r\n  const [images, setImages] = useState([\r\n    {\r\n      src: './images/inside-image01.jpg',\r\n    },\r\n    {\r\n      src: './images/inside-image02.jpg',\r\n    },\r\n    {\r\n      src: './images/inside-image03.jpg',\r\n    },\r\n    {\r\n      src: './images/inside-image04.jpg',\r\n    },\r\n  ]);\r\n  const [isPopVisible, setIsPopVisible] = useState(false);\r\n\r\n  const handleClickPrev = (e: any) => {\r\n    if (number === 0) {\r\n      return setNumber(3);\r\n    }\r\n    setNumber(number - 1);\r\n  };\r\n\r\n  const handleClickNext = (e: any) => {\r\n    if (number === 3) {\r\n      return setNumber(0);\r\n    }\r\n    setNumber(number + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        variants={containerVariants}\r\n        initial='hidden'\r\n        animate='visible'\r\n      >\r\n        <Wrapper>\r\n          <small>공차는 세련되고 전문적인 모습으로 새로워지고 있습니다.</small>\r\n          <ButtonWrap>\r\n            <Button\r\n              type='button'\r\n              onClick={handleClickPrev}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.8 }}\r\n            >\r\n              <FaChevronLeft />\r\n            </Button>\r\n            <Button\r\n              type='button'\r\n              onClick={handleClickNext}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.8 }}\r\n            >\r\n              <FaChevronRight />\r\n            </Button>\r\n          </ButtonWrap>\r\n        </Wrapper>\r\n\r\n        <ImgWrapper>\r\n          <img\r\n            className={isPopVisible ? 'popvisible' : ''}\r\n            src={images[number].src}\r\n            alt='img'\r\n            onClick={() => setIsPopVisible(!isPopVisible)}\r\n          />\r\n        </ImgWrapper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainFooter;\r\n","import { motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\nimport MainFooter from '../../components/home-footer';\r\n\r\nconst Container = styled(motion.div)`\r\n  height: 100vh;\r\n  position: relative;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6)),\r\n    url('/images/background.jpg');\r\n  background-position: center;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst BannerTitle = styled.div`\r\n  margin: 80px 130px;\r\n  margin-top: 15rem;\r\n  color: #fff;\r\n\r\n  h1 {\r\n    font-size: 64px;\r\n    margin-bottom: 30px;\r\n    letter-spacing: -5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .textColor {\r\n    color: #cf3e58;\r\n    opacity: 0.8;\r\n    display: inline-block;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 15rem 0 80px 30px;\r\n\r\n    h1 {\r\n      font-size: 50px;\r\n      letter-spacing: -5px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 390px) {\r\n    h1 {\r\n      font-size: 42px;\r\n      letter-spacing: -5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst textVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: { opacity: 1, y: 0, transition: { duration: 0.8, delay: 0.5 } },\r\n};\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Container initial='hidden' animate='visible' exit='hidden'>\r\n      <BannerTitle>\r\n        <motion.h1 variants={textVariants}>\r\n          <motion.span className='textColor' variants={textVariants}>\r\n            Tea\r\n          </motion.span>\r\n          로 시작하는 <br />\r\n          <motion.span className='textColor' variants={textVariants}>\r\n            The\r\n          </motion.span>\r\n          기분 좋은 아침!\r\n        </motion.h1>\r\n      </BannerTitle>\r\n\r\n      <MainFooter />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["Container","styled","motion","div","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","ButtonWrap","_templateObject3","Button","button","_templateObject4","ImgWrapper","_templateObject5","containerVariants","hidden","opacity","y","visible","transition","duration","delay","MainFooter","number","setNumber","useState","images","setImages","src","isPopVisible","setIsPopVisible","_jsx","_Fragment","children","_jsxs","variants","initial","animate","type","onClick","e","whileHover","scale","whileTap","FaChevronLeft","FaChevronRight","className","alt","BannerTitle","textVariants","HomePage","exit","h1","span"],"sourceRoot":""}